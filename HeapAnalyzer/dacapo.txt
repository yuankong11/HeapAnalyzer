java -jar dacapo-9.12-MR1-bach.jar h2 -s small
Using scaled threading model. 8 processors detected, 8 threads used to drive the workload, in a possible range of [1,400]
INFO: Agent OnAttach.
class_number: 1177
object_number: 1436250

id  	#bytes    	class_name
----------------------------------------------------
1   	524304    	byte[] <-- java.lang.Class <-- root
2   	524304    	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
3   	131088    	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
4   	65552     	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
5   	65552     	java.util.HashMap$Node[] <-- java.util.HashMap <-- java.util.HashSet <-- ...
6   	40384     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node[] <-- ...
7   	37000     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node[] <-- ...
8   	32784     	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
9   	32784     	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
10  	32784     	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
11  	20352     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node[] <-- ...
12  	18720     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node <-- ...
13  	17184     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node <-- ...
14  	16400     	char[] <-- java.io.BufferedWriter <-- org.dacapo.harness.TeePrintStream <-- ...
15  	16400     	char[] <-- java.io.BufferedWriter <-- org.dacapo.harness.TeePrintStream <-- ...
16  	16400     	char[] <-- java.io.BufferedWriter <-- java.io.PrintStream <-- ...
17  	16400     	char[] <-- java.io.BufferedWriter <-- java.io.PrintStream <-- ...
18  	16400     	java.lang.Object[] <-- org.h2.util.ObjectArray <-- org.h2.index.ScanIndex <-- ...
19  	14152     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node <-- ...
20  	11344     	byte[] <-- java.util.HashMap$Node <-- java.util.HashMap$Node[] <-- ...


id  	#instances  	#bytes         	class_name
----------------------------------------------------
1   	137151      	10972080       	org.h2.result.Row
2   	137427      	9166928        	org.h2.value.Value[]
3   	260975      	8351200        	org.h2.index.TreeNode
4   	140581      	6493248        	char[]
5   	240129      	3842064        	org.h2.value.ValueStringFixed
6   	140542      	3373008        	java.lang.String
7   	74082       	2963280        	java.math.BigDecimal
8   	136736      	2187776        	org.h2.value.ValueInt
9   	74162       	1779888        	org.h2.value.ValueDecimal
10  	540         	1086952        	byte[]
11  	1723        	918248         	java.lang.Object[]
12  	40234       	643744         	org.h2.value.ValueString
13  	32270       	516320         	org.h2.value.ValueShort
14  	1186        	137656         	java.lang.Class
15  	223         	137320         	java.util.HashMap$Node[]
16  	2469        	79008          	java.util.HashMap$Node
17  	906         	54824          	int[]
18  	513         	49248          	sun.util.calendar.Gregorian$Date
19  	922         	44256          	org.h2.expression.ExpressionColumn
20  	350         	36400          	org.h2.table.Column


Completed 400 transactions
	Stock level .............    12 ( 3.0%)
	Order status by name ....    11 ( 2.8%)
	Order status by ID ......     5 ( 1.3%)
	Payment by name .........   107 (26.8%)
	Payment by ID ...........    64 (16.0%)
	Delivery schedule .......    18 ( 4.5%)
	New order ...............   179 (44.8%)
	New order rollback ......     4 ( 1.0%)
Resetting database to initial state
INFO: Agent OnUnload.
